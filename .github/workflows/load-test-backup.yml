name: Backup GHES instance and save to Azure
run-name: "${{ github.actor }} - Backup GHES instance and save to Azure"

on:
  workflow_call:
    inputs:
      github-hostname:
        description: GitHub Hostname to backup
        required: true
        type: string
      backup-name:
        description: The name of the backup to be saved in Azure storage
        required: false
        default: ""
        type: string
      ref:
        description: 'Branch ref to use'
        required: false
        type: string
        default: 'master'
      version:
        description: 'Version of the GHES instance (x.y.z)'
        required: false
        default: '3.10.0'
        type: string
    secrets:
      BACKUP_SSH_KEY:
        description: SSH key to access the GitHub Enterprise instance
        required: true
      INTERNAL_ACTIONS_DX_BOT_ACCOUNT_TOKEN:
        description: Token for the internal actions dx bot account
        required: true
      AZURE_ACCOUNT_NAME:
        description: Azure storage account name
        required: false
      AZURE_CONTAINER_NAME:
        description: Azure storage container name
        required: false
      CONNECTIONSTRING:
        description: Azure storage connection string
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        repository: github/backup-utils-private
        ref: ${{ inputs.ref }}
        token: "${{ secrets.INTERNAL_ACTIONS_DX_BOT_ACCOUNT_TOKEN }}"
    - run: docker build . --file Dockerfile --tag backup-utils
    - run: docker save backup-utils -o backup-utils.tar
    - uses: actions/upload-artifact@v3
      with:
        name: backup-utils
        path: backup-utils.tar

  backup-utils-backup:
    needs: build
    runs-on: ubuntu-latest-xl

    env:
        SSH_KEY: ${{ secrets.BACKUP_SSH_KEY }}
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: backup-utils
    - name: Load docker container
      run: docker load -i backup-utils.tar
    - uses: actions/checkout@v4
    - name: Create backup directory
      run: mkdir "$HOME/ghe-backup-data"
    - name: set up ssh SSH_KEY
      run: echo -e "${SSH_KEY}\n" > "$HOME/backup"
    - name: set up ssh key permissions
      run: chmod 0600 "$HOME/backup"
    - name: change version
      run: echo "${{ inputs.version }}" > "$HOME/version"

    - name: Perform backup
      run: |
        docker run -e "GHE_HOSTNAME=${{ inputs.github-hostname }}" \
        -e "GHE_DATA_DIR=/data" \
        -e "GHE_EXTRA_SSH_OPTS=-p 122 -i /ghe-ssh/id_rsa -o ServerAliveInterval=30 -o ServerAliveCountMax=12000 -o StrictHostKeyChecking=no" \
        -e "GHE_NUM_SNAPSHOTS=15" \
        -v "$HOME/ghe-backup-data:/data" \
        -v "$HOME/backup:/ghe-ssh/id_rsa" \
        -v "$HOME/version:/backup-utils/share/github-backup-utils/version" \
        --rm \
        backup-utils ghe-backup
    - name: Check the backup file
      run: |
        current=$(readlink "$HOME/ghe-backup-data/current")
        sudo tar -czvf "${{ inputs.backup-name }}.tar.gz" -C "$HOME/ghe-backup-data/$current" .

    - name: Upload backup to Azure storage
      if: "${{ inputs.backup-name != '' }}"
      run: |
        az storage blob upload \
        --account-name "${{ secrets.AZURE_ACCOUNT_NAME }}" \
        --container-name "${{ secrets.AZURE_CONTAINER_NAME }}" \
        --name "${{ inputs.backup-name }}.tar.gz" \
        --file "${{ inputs.backup-name }}.tar.gz" \
        --connection-string "${{ secrets.CONNECTIONSTRING }}"
